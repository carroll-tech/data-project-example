name: Terraform Plan

on:
  workflow_call:
    inputs:
      working_directory:
        description: 'Directory containing Terraform configuration'
        required: true
        type: string

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}
    
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.2
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      
      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      
      - name: Terraform Validate
        id: validate
        run: terraform validate
      
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Comment on the Pull Request
        if: github.event_name == 'pull_request'
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: "jolfr/data-project-example"
          number: ${{ github.event.number }}
          id: ${{ inputs.working_directory }}
          message: |
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ inputs.working_directory }}\`, Workflow: \`${{ github.workflow }}\`*
          recreate: true